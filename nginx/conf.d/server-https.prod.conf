acme_issuer letsencrypt {
    uri https://acme-v02.api.letsencrypt.org/directory;
    state_path /var/cache/nginx/acme-letsencrypt;
    accept_terms_of_service;
}

server {
    include /etc/nginx/conf.d/dojo-host.conf;  # defines server_name
    listen 443 ssl default_server;
    http2 on;

    # Automatic certificate management
    acme_certificate      letsencrypt;
    ssl_certificate       $acme_certificate;
    ssl_certificate_key   $acme_certificate_key;
    ssl_certificate_cache max=2;

    # Standard SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Basic security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header X-Frame-Options "SAMEORIGIN" always;

    include /etc/nginx/conf.d/proxy-headers.conf;
    include /etc/nginx/conf.d/location-*.conf;
}

# Registry host HTTPS with ACME (production)
server {
    include /etc/nginx/conf.d/registry-host.conf;  # defines server_name
    listen 443 ssl;
    http2 on;

    # Automatic certificate management
    acme_certificate      letsencrypt;
    ssl_certificate       $acme_certificate;
    ssl_certificate_key   $acme_certificate_key;
    ssl_certificate_cache max=2;

    # Standard SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Basic security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Frame-Options "SAMEORIGIN" always;

    location /v2/ {
        include /etc/nginx/conf.d/proxy-headers.conf;
        proxy_pass              http://registry:5000;
        proxy_set_header        Authorization $http_authorization;
        proxy_request_buffering off;
        proxy_buffering         off;
        client_max_body_size    500M;
    }

    location ^~ /auth/token {
        include /etc/nginx/conf.d/proxy-headers.conf;
        proxy_pass              http://registry-auth:8080;
        proxy_buffering         off;
        client_max_body_size    500M;
    }
}
